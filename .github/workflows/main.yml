name: Playwright Tests with Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Install Allure Commandline
        run: |
          curl -o allure-2.20.1.tgz -OL https://github.com/allure-framework/allure2/releases/download/2.20.1/allure-2.20.1.tgz
          tar -zxvf allure-2.20.1.tgz
          sudo mv allure-2.20.1 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure

      - name: Run Playwright tests
        run: |
          npx playwright test --reporter=line,allure-playwright

      - name: Generate Allure Report
        if: always()
        run: |
          allure generate ./allure-results -o allure-report --clean

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAT }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

      - name: Notify Slack with Allure Report Link
        if: always()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          curl -X POST \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-type: application/json" \
            --data '{"channel":"'$SLACK_CHANNEL_ID'","text":"Allure Report is available: '$REPORT_URL'"}' \
            https://slack.com/api/chat.postMessage
